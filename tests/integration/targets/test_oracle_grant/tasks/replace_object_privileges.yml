---
- name: "define connection parameters"
  set_fact:
    connection_parameters: &con_param
      hostname: "{{ oracle_hostname }}"      
      port: "{{ oracle_port }}"      
      #service_name: "{{ oracle_service_name }}"
      #username: "{{ oracle_username }}"
      #password: "{{ oracle_password }}"
      # Connect into PDB
      service_name: "{{ oracle_service_name }}_PDB"
      username: pdbadmin
      password: pdbpass    
      mode: "sysdba"

- name: set objects privileges to user
  oracle_grant:
    <<: *con_param
    grantee: "u_foo"
    objects_privileges:
      - execute:dbms_random
      - read,select:dba_users
      # dbms_random:
      #   - "execute"
      # dba_users:
      #   - "select"
      #   - "read"
    grant_mode: "exact"
  register: _
  failed_when: _.failed or not _.changed

- name: set same privileges to user
  oracle_grant:
    <<: *con_param
    grantee: "u_foo"
    objects_privileges:
      - execute:dbms_random
      - read,select:dba_users
      # dbms_random:
      #   - "execute"
      # dba_users:
      #   - "select"
      #   - "read"
    grant_mode: "exact"
  register: _
  failed_when: _.failed or _.changed

- name: set different privileges to user
  oracle_grant:
    <<: *con_param
    grantee: "u_foo"
    objects_privileges:
      - execute:dbms_random
      - read:dba_users
      - select:dba_views
      # dbms_random:
      #   - "execute"
      # dba_users:
      #   - "read"
      # dba_views:
      #   - "select"
    grant_mode: "exact"
  register: _
  failed_when: |
    _.failed or
    not _.changed or
    'revoke select on dba_users' not in _.ddls[0] or
    'grant select on dba_views' not in _.ddls[1] or
    'grant read on dba_users' in _.ddls[0] or
    'grant read on dba_users' in _.ddls[1]    

- name: reset user's privilege
  oracle_grant:
    <<: *con_param
    grantee: "u_foo"
    grant_mode: "exact"
...
