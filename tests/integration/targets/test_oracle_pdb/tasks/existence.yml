---

- name: "define connection parameters"
  set_fact:
    connection_parameters: &con_param
      hostname: "{{ oracle_hostname }}"      
      port: "{{ oracle_port }}"      
      service_name: "{{ oracle_service_name }}"
      username: "{{ oracle_username }}"
      password: "{{ oracle_password }}"
      mode: "sysdba"

- name: 'Connection paramters - see or use integration_config.yml.template'
  debug:
    var: connection_parameters

- name: create PDB
  oracle_pdb:
    <<: *con_param
    pdb_name: "XEPDB2"
    state: "opened"
    pdb_admin_username: foo
    pdb_admin_password: bar
    # TODO: test this on non-ASM instance
    # file_name_convert:
    #   "/opt/oracle/oradata/XE/pdbseed": "/tmp/xepdb2/dbf01"

- name: check an existing PDB is present
  oracle_pdb:
    <<: *con_param
    pdb_name: "XEPDB2"
    state: "status"
  register: _
  failed_when: _.failed or not _.state

- name: drop PDB
  oracle_pdb:
    <<: *con_param
    pdb_name: "XEPDB2"
    state: "absent"

- name: check an inexistent PDB is absent
  oracle_pdb:
    <<: *con_param
    pdb_name: "XEPDB3"
    state: "present"
  register: _
  failed_when: not _.failed
...
